{"version":3,"sources":["factory functions/ship.js","factory functions/gameboard.js","factory functions/autoPlaceShips.js","factory functions/player.js","factory functions/computerAI.js","components/InitializeGame.js","components/GameText.js","components/Cell.js","components/Board.js","components/GameOverCard.js","components/CreateShip.js","components/Ships.js","components/ShipPreview.js","components/Animation.js","App.js","index.js"],"names":["Ship","length","boardPosition","hits","hitPosition","hit","pos","push","isSunk","sort","join","Gameboard","board","Array","i","ships","misses","placeShip","axis","ship","n","vaild","checkShipPlacementValidity","receiveAttack","index","findIndex","includes","areAllSunk","every","autoPlaceShips","gameboard","Math","floor","random","array","p","Player","name","fire","enemyBoard","cell","AI","currentTarget","nextPos","previousTarget","shipTarget","findShip","validPos","filter","some","isEnemyShipSunk","possiblePos","find","undefined","pickNextTarget","setCurrentTarget","InitializeGame","props","useState","value","setValue","invaildForm","setInvaildForm","id","type","placeholder","onChange","e","target","onKeyDown","keyCode","initializePlayer","onClick","test","GameText","h1","Cell","useDrop","accept","drop","monitor","a","content","sunk","color","p2","shipColor","droppable","cellType","className","ref","listener","Board","class","isEnemy","map","updateCell","GameOverCard","winner","startOver","CreateShip","setPos","useDrag","item","collect","isDragging","drag","onMouseDown","getAttribute","onTouchStart","data-key","createShip","Ships","changeAxis","shipNumArray","ShipPreview","usePreview","display","style","Animation","player1","COM","count","onAnimationEnd","setPlayAnimation","App","setBoard","setEnemyBoard","displayStartButton","setDisplayStartButton","allShipsPlaced","setAllShipsPlaced","gameOver","setGameOver","setAxis","playAnimation","boardOn","setBoardOn","gameText","setGameText","setShipNumArray","isComputer","gameLoop","isComputerTurn","setTimeout","resetPlayer","options","HTML5toTouch","shipPos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ec5c9bd.chunk.js","sourcesContent":["function Ship(length, boardPosition) {\n  let hits = [];\n\n  function hit(pos) {\n    hits.push(pos);\n  };\n\n  function isSunk() {\n    return boardPosition.sort().join('') === hits.sort().join('');\n  };\n\n  return {\n    length: length,\n    boardPosition: boardPosition,\n    hitPosition: hits,\n    hit,\n    isSunk\n  };\n};\n\nexport default Ship;","import Ship from './ship';\n\nfunction Gameboard() {\n  let board = new Array(100);\n  for (let i = 0; i < 100; i++) {\n    board[i] = '';\n  };\n  let ships = [Ship(2,[]),Ship(3,[]),Ship(3,[]),Ship(4,[]),Ship(5,[])]\n  let misses = [];\n\n  function placeShip(pos, axis, ship) {\n    let n = axis === 'y' ? 10 : 1;\n    if (checkShipPlacementValidity(pos, ship, n)) {\n      for(let i = 0; i < (ship.length * n); i += n) {\n        board[pos + i] = 'ship';\n        ship.boardPosition.push(pos + i);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  function checkShipPlacementValidity(pos, ship, n) {\n    let vaild = true;\n    if (pos < 0) {\n      vaild = false;\n    } else if (ship.boardPosition.length !== 0) {\n      vaild = false\n    } else {\n      for(let i = 0; i < (ship.length * n); i += n) {\n        if (board[pos + i] === 'ship') {\n          vaild = false;\n        } else if ((n === 1 && pos % 10 + i > 9) || (n === 10 && pos + (ship.length * 10 - 10) > 99)) {\n          vaild = false;\n        }\n      }\n    }\n    return vaild;\n  };\n\n  function receiveAttack(pos) {\n    if (board[pos] === 'ship') {\n      let index = ships.findIndex((ship) => ship.boardPosition.includes(pos));\n      ships[index].hit(pos);\n      board[pos] = 'hit';\n    } else {\n      misses.push(pos);\n      board[pos] = 'miss';\n    }\n  };\n\n  function areAllSunk() {\n    return ships.every((ship) => ship.isSunk() === true);\n  }\n\n  return {\n    board: board,\n    misses: misses,\n    ships: ships,\n    placeShip,\n    receiveAttack,\n    areAllSunk\n  };\n};\n\nexport default Gameboard;","function autoPlaceShips(gameboard) {\n  for (let i = 0; i <= 4; i++) {\n    let axis = (Math.floor(Math.random() * 2) === 1) ? 'x' : 'y';\n    let pos = Math.floor(Math.random() * 100);\n    let length = gameboard.ships[i].length;\n    let array = [];\n    if (axis === 'x') {\n      for(let i = 0; i < length; i++) {\n        array.push(pos + i);\n      }\n      while (!(pos % 10 + length <= 9 && array.every((p) => gameboard.board[p] === ''))) {\n        pos = Math.floor(Math.random() * 100);\n        array = [];\n        for(let i = 0; i < length; i++) {\n          array.push(pos + i);\n        }\n      }\n    } else {\n      for(let i = 0; i < (length * 10); i += 10) {\n        array.push(pos + i);\n      }\n      while (!(pos + (length * 10 - 10) <= 99 && array.every((p) => gameboard.board[p] === ''))) {\n        pos = Math.floor(Math.random() * 100);\n        array = [];\n        for(let i = 0; i < (length * 10); i += 10) {\n          array.push(pos + i);\n        }\n      }\n    }\n    gameboard.placeShip(pos, axis, gameboard.ships[i]);\n  }\n};\n\nexport default autoPlaceShips;","import Gameboard from './gameboard';\nimport autoPlaceShips from './autoPlaceShips';\n\nfunction Player(name) {\n  function fire(pos, enemyBoard) {\n    let cell = enemyBoard.board[pos]\n    if (cell === '' || cell === 'ship') {\n      enemyBoard.receiveAttack(pos);\n    } else {\n      return false;\n    }\n  };\n\n  return {\n    name,\n    gameboard: Gameboard(),\n    autoPlaceShips,\n    fire\n  };\n};\n\nexport default Player;","import Gameboard from './gameboard';\nimport autoPlaceShips from './autoPlaceShips';\n\nfunction AI() {\n  let currentTarget;\n  let nextPos;\n  let previousTarget;\n  let shipTarget;\n\n  function fire(enemyBoard) {\n    let pos = currentTarget ? pickNextTarget(enemyBoard) : Math.floor(Math.random() * 100);\n    if(!(currentTarget)) {\n      while (enemyBoard.board[pos] !== '' && enemyBoard.board[pos] !== 'ship') {\n        pos = Math.floor(Math.random() * 100);\n      }\n    }\n    enemyBoard.receiveAttack(pos);\n    if (enemyBoard.board[pos] === 'hit') {\n      currentTarget = pos;\n      if (!(previousTarget)) {\n        previousTarget = pos;\n        shipTarget = findShip(pos, enemyBoard.ships);\n      }\n    }\n    return pos;\n  };\n\n  function findShip(pos, ships) {\n    return ships.findIndex((ship) => (\n      ship.boardPosition.includes(pos)\n    ));\n  };\n\n  function setCurrentTarget(pos, ships) {\n    currentTarget = pos;\n    previousTarget = pos;\n    nextPos = undefined;\n    shipTarget = findShip(pos, ships);\n  };\n\n  function pickNextTarget(enemyBoard) {\n    function validPos(pos) {\n      if (enemyBoard.board[currentTarget + pos] !== 'miss' && enemyBoard.board[currentTarget + pos] !== 'hit' && currentTarget + pos < 100) {\n        if (pos === 1 && currentTarget % 10 + 1 > 9) {\n          return false;\n        } else if (pos === -1 && currentTarget % 10 - 1 < 0) {\n          return false;\n        } else if (enemyBoard.board[currentTarget + pos] === 'ship' && !(enemyBoard.ships[shipTarget].boardPosition.includes(currentTarget + pos))) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    };\n\n    if (isEnemyShipSunk(currentTarget, enemyBoard.ships)) {\n      currentTarget = undefined;\n      previousTarget = undefined;\n      nextPos = undefined;\n    } else {\n      const possiblePos = [1, -1, 10, -10];\n      if (!(enemyBoard.board[currentTarget + nextPos] !== 'miss' && enemyBoard.board[currentTarget + nextPos] !== 'hit' && currentTarget + nextPos < 100 && enemyBoard.ships[shipTarget].boardPosition.includes(currentTarget + nextPos))) {\n        if (enemyBoard.board[previousTarget - nextPos] === 'ship' && nextPos && enemyBoard.ships[shipTarget].boardPosition.includes(previousTarget - nextPos)) {\n          currentTarget = previousTarget;\n          nextPos = -nextPos;\n        } else {\n          nextPos = possiblePos.find((pos) => (validPos(pos)));\n        }\n      }\n\n      if (nextPos === undefined) {\n        currentTarget = undefined;\n        previousTarget = undefined;\n      }\n      return currentTarget + nextPos\n    }\n  };\n\n  function isEnemyShipSunk(pos, ships) {\n    return ships.filter(ship => ship.isSunk()).some((ship) => (\n      ship.boardPosition.includes(pos)\n    ));\n  };\n\n  return {\n    name: 'COM',\n    gameboard: Gameboard(),\n    autoPlaceShips,\n    fire,\n    setCurrentTarget,\n  };\n};\n\nexport default AI;","import React, { useState } from 'react';\n\nfunction InitializeGame(props) {\n  const [value, setValue] = useState('');\n  const [invaildForm, setInvaildForm] = useState(false);\n  \n  function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  function keyPress(e) {\n    if (e.keyCode === 13) {\n      props.initializePlayer(value);\n    }\n  };\n\n  function validateForm() {\n    if (/^[a-zA-Z]/.test(value)) {\n      props.initializePlayer(value);\n    } else {\n      setInvaildForm(true);\n    }\n  }\n\n  return (\n    <div id='initializeGameContainer'>\n      <div id='initializeGame'>\n        <h1>BATTLESHIP</h1>\n        <p>{invaildForm ? 'Name Required' : ''}</p>\n        <input type='text' placeholder='Your Name' value={value} onChange={handleChange} onKeyDown={keyPress}></input>\n        <button onClick={() => validateForm()}>Continue</button>\n      </div>\n    </div>\n  );\n};\n\nexport default InitializeGame;","import React from 'react';\n\nfunction GameText(props) {\n\n  return (\n    <div id='gameText'>\n      <h1>{props.h1}</h1>\n      <p>{props.p}</p>\n    </div>\n  );\n};\n\nexport default GameText;","import React from 'react';\nimport { useDrop } from 'react-dnd';\n\nfunction Cell(props) {\n  const [, drop] = useDrop({\n    accept: 'ship',\n    drop: (monitor) => (props.placeShip(props.id, props.axis, monitor.id, monitor.pos))\n  });\n\n  let a = [];\n\n  function content() {\n    switch (props.content) {\n      case 'miss':\n        return '⬤';\n      case 'hit':\n        return '⬤';\n      default:\n        return '';\n    }\n  };\n\n  function cellType() {\n    switch (props.content) {\n      case 'hit':\n        let sunk = (isSunk()) ? 'sunk' : 'hit';\n        a[0] = sunk;\n        break;\n      case 'ship':\n        let color = props.p2 ? null : shipColor();\n        a[0] = color;\n        break;\n      default:\n        let droppable = props.p2 ? null : drop;\n        a[1] = droppable\n        break;\n    }\n  };\n  cellType();\n\n  function isSunk() {\n    return props.ships.filter(ship => ship.isSunk()).some((ship) => (\n      ship.boardPosition.includes(props.id)\n    ));\n  };\n\n  function shipColor() {\n    let value;\n    for(let i = 0; i < 5; i++) {\n      if (props.ships[i].boardPosition.includes(props.id)) {\n        value = `ship ${i}`;\n        break;\n      }\n    }\n    return value;\n  };\n\n  return (\n    <span className={a[0]} ref={a[1]} onClick={props.content === '' || props.content === 'ship' ? props.listener : null}>{content()}</span>\n  );\n};\n\nexport default Cell;","import React from 'react';\nimport Cell from './Cell';\n\nfunction Board(props) {\n  function boardType() {\n    if (props.isEnemy) {\n      return props.board.map((cell, id) => \n        <Cell key={id} id={id} content={cell} p2={true} listener={() => props.updateCell(id)} ships={props.ships}/>\n      );\n    } else {\n      return props.board.map((cell, id) => \n        <Cell key={id} id={id} content={cell} p2={false} ships={props.ships} axis={props.axis} placeShip={props.placeShip}/>\n      );\n    }\n  }\n\n  return (\n    <div className={`board ${props.class}`}>\n      {boardType()}\n    </div>\n  );\n};\n\nexport default Board;","import React from 'react';\n\nfunction GameOverCard(props) {\n  return (\n    <div id='gameOverContainer'>\n      <div id='gameOverCard'>\n        <h1>{props.winner} Wins!</h1>\n        <button onClick={() => props.startOver()}>Play Again?</button>\n      </div>\n    </div>\n  );\n};\n\nexport default GameOverCard;","import React, { useState } from 'react';\nimport { useDrag } from 'react-dnd';\n\nfunction CreateShip(props) {\n  const [pos, setPos] = useState(0);\n\n  const [, drag] = useDrag({\n    item: { type: 'ship', length:props.length, id:props.id, pos:pos },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging()\n    })\n  })\n\n  function createShip() {\n    let ship = [];\n    for (let i = 0; i < props.length; i++) {\n      ship.push(<span className={`ship ${props.id}`} key={i} data-key={i}></span>)\n    }\n    return ship;\n  };\n\n  return (\n    <div \n    className={`shipContainer ${props.axis} ${props.length}`} \n    ref={drag} \n    onMouseDown={(e) => setPos(e.target.getAttribute('data-key'))}\n    onTouchStart={(e) => setPos(e.target.getAttribute('data-key'))}>\n      {createShip()}\n    </div>\n  );\n};\n\nexport default CreateShip;","import React from 'react';\nimport CreateShip from \"./CreateShip\";\n\nfunction Ships(props) {\n  return (\n    <div id='shipsWrapper'>\n      <button id='rotateButton' onClick={() => props.changeAxis()}>🗘Rotate</button>\n      <div id='shipsContainer'>\n        {props.shipNumArray.includes('0') ? null : <CreateShip id='0' length='2' axis={props.axis} />}\n        {props.shipNumArray.includes('1') ? null : <CreateShip id='1' length='3' axis={props.axis} />}\n        {props.shipNumArray.includes('2') ? null : <CreateShip id='2' length='3' axis={props.axis} />}\n        {props.shipNumArray.includes('3') ? null : <CreateShip id='3' length='4' axis={props.axis} />}\n        {props.shipNumArray.includes('4') ? null : <CreateShip id='4' length='5' axis={props.axis} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Ships;","import React from 'react';\nimport { usePreview } from 'react-dnd-multi-backend';\n\nfunction ShipPreview(props) {\n  const {display, item, style} = usePreview();\n  if (!display) {\n    return null;\n  }\n\n  function createShip() {\n    let ship = [];\n    for (let i = 0; i < item.length; i++) {\n      ship.push(<span className={`ship ${item.id}`}  key={i}></span>)\n    }\n    return ship;\n  };\n\n  return (\n    <div className={`shipContainer ${props.axis} ${item.length}`}  style={style}>{createShip()}</div>\n  );\n};\n\nexport default ShipPreview;","import React from 'react';\n\nfunction Animation(props) {\n  let count = 0;\n\n  function stopAnimation() {\n    count += 1;\n    if (count === 2) {\n      props.setPlayAnimation(false)\n    }\n  };\n\n  return (\n    <div id='animation' onAnimationEnd={() => stopAnimation()}></div>\n  );\n};\n\nexport default Animation;","import React, { useState } from 'react';\nimport { DndProvider } from 'react-dnd-multi-backend';\nimport HTML5toTouch from 'react-dnd-multi-backend/dist/esm/HTML5toTouch';\nimport './App.css';\nimport Player from \"./factory functions/player\";\nimport AI from \"./factory functions/computerAI\";\nimport InitializeGame from \"./components/InitializeGame\";\nimport GameText from \"./components/GameText\";\nimport Board from \"./components/Board\";\nimport GameOverCard from \"./components/GameOverCard\";\nimport Ships from \"./components/Ships\";\nimport ShipPreview from \"./components/ShipPreview\";\nimport Animation from \"./components/Animation\";\n\nlet player1;\nlet COM;\nlet winner;\n\nfunction App() {\n  const [board, setBoard] = useState(false);\n  const [enemyBoard, setEnemyBoard] = useState(false);\n  const [displayStartButton, setDisplayStartButton] = useState(false);\n  const [allShipsPlaced, setAllShipsPlaced] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [axis, setAxis] = useState('y');\n  const [playAnimation, setPlayAnimation] = useState(false);\n  const [boardOn, setBoardOn] = useState(true);\n  const [gameText, setGameText] = useState(['Place Your Ships','(Drag Ship on to The Board to Place)']);\n  const [shipNumArray, setShipNumArray] = useState([]);\n\n  function initializePlayer(name) {\n    player1 = Player(name);\n    setPlayAnimation(true);\n    setTimeout(() => {\n      setBoard(player1.gameboard.board);\n    }, 200);\n  };\n\n  function changeAxis() {\n    let newAxis = axis === 'y' ? 'x' : 'y';\n    setAxis(newAxis);\n  };\n\n  function placeShip(id, axis, ship, shipPos) {\n    shipPos = axis === 'x' ? shipPos : shipPos * 10;\n    id -= shipPos;\n    if (player1.gameboard.placeShip(id, axis, player1.gameboard.ships[ship])) {\n      setShipNumArray([...shipNumArray, ship]);\n      if (shipNumArray.length === 4) {\n        setShipNumArray([]);\n        setDisplayStartButton(true);\n        setAllShipsPlaced(true);\n      }\n      setBoard([...player1.gameboard.board]);\n    }\n  };\n\n  function autoPlace() {\n    if (shipNumArray.length === 0) {\n      resetPlayer();\n      player1.autoPlaceShips(player1.gameboard);\n      setAllShipsPlaced(true);\n      setDisplayStartButton(true)\n      setBoard([...player1.gameboard.board]);\n    }\n  };\n\n  function startGame() {\n    COM = AI();\n    COM.autoPlaceShips(COM.gameboard);\n    setPlayAnimation(true);\n    setTimeout(() => {\n      setGameText([`${player1.name}'s Turn`,'']);\n      setEnemyBoard([...COM.gameboard.board]);\n    }, 200);\n  };\n\n  function updateCell(id, isComputer) {\n    if (isComputer === true) {\n      COM.fire(player1.gameboard);\n      setBoard([...player1.gameboard.board]);\n      gameLoop();\n    } else {\n      player1.fire(id, COM.gameboard);\n      setEnemyBoard([...COM.gameboard.board]);\n      gameLoop(true);\n    }\n  };\n\n  function gameLoop(isComputerTurn) {\n    if (player1.gameboard.areAllSunk() || COM.gameboard.areAllSunk()) {\n      winner = (COM.gameboard.areAllSunk()) ? player1.name : COM.name;\n      setBoardOn(true);\n      setGameOver(true);\n    } else if (isComputerTurn) {\n      setGameText([`${COM.name}'s Turn`,'']);\n      setBoardOn(false);\n      setTimeout(() => {\n        updateCell(null, true);\n      }, 400);\n    } else {\n      setGameText([`${player1.name}'s Turn`,'']);\n      setBoardOn(true);\n    }\n  };\n\n  function resetPlayer() {\n    player1 = Player(player1.name);\n    setBoard([...player1.gameboard.board]);\n  };\n\n  function startOver() {\n    resetPlayer();\n    setPlayAnimation(true);\n    setTimeout(() => {\n      setEnemyBoard(false);\n      setAllShipsPlaced(false);\n      setGameOver(false);\n      setGameText(['Place Your Ships','(Drag Ship on to The Board to Place)']);\n    }, 200);\n  };\n\n  return (\n    <div className=\"App\">\n      {board === false ? <InitializeGame initializePlayer={initializePlayer}/> : null}\n      {board !== false ? <GameText h1={gameText[0]} p={gameText[1]}/> : null}\n      <DndProvider options={HTML5toTouch}>\n        <div id=\"boardsContainer\">\n          {board !== false ? <Board board={board} axis={axis} placeShip={allShipsPlaced ? null : placeShip} isEnemy={false} ships={player1.gameboard.ships}/> : null}\n          {enemyBoard !== false ? <Board board={enemyBoard} updateCell={updateCell} isEnemy={true} ships={COM.gameboard.ships} class={boardOn ? null : 'off'}/> : null}\n          {board !== false && allShipsPlaced === false ? <Ships axis={axis} changeAxis={changeAxis} shipNumArray={shipNumArray}/> : null}\n          <ShipPreview axis={axis}/>\n        </div>\n      </DndProvider>\n      {board !== false && enemyBoard === false ? <button id='autoPlaceButton' onClick={() => autoPlace()}>Auto Place</button> : null}\n      {displayStartButton === true ? <button id='startGameButton' onClick={() => {startGame(); setDisplayStartButton(false)}}>Start Game</button> : null}\n      {gameOver ? <GameOverCard winner={winner} startOver={startOver}/> : null}\n      {playAnimation ? <Animation setPlayAnimation={setPlayAnimation}/> : null}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}